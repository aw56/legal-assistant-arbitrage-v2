---
# ============================================
# ‚öñÔ∏è Pre-commit DevOps Suite ‚Äî Legal Assistant Arbitrage v2.8
# ‚úÖ Stable Clean Edition (loop-free)
# ============================================

repos:
  # --- üñ§ Black: –∞–≤—Ç–æ—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Python-–∫–æ–¥–∞ ---
  - repo: https://github.com/psf/black
    rev: "25.9.0"
    hooks:
      - id: black
        name: black (formatter)
        language_version: python3.12
        args: [--line-length=88]
        exclude: ^node_modules/
        stages: [commit]

  # --- üî§ isort: —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –∏–º–ø–æ—Ä—Ç–æ–≤ ---
  - repo: https://github.com/PyCQA/isort
    rev: "6.1.0"
    hooks:
      - id: isort
        name: isort (imports)
        language_version: python3.12
        args: [--profile=black]
        exclude: ^node_modules/
        stages: [commit]

  # --- üßπ flake8: —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑ Python ---
  - repo: https://github.com/pycqa/flake8
    rev: "7.3.0"
    hooks:
      - id: flake8
        name: flake8 (project)
        language_version: python3.12
        entry: flake8 --config=.flake8
        types: [python]
        stages: [commit]
        exclude: >
          (?x)^(
            node_modules/|
            venv/|
            artifacts/|
            docs/|
            alembic/|
            backup/|
            build/|
            dist/
          )

  # --- üß∞ –ë–∞–∑–æ–≤—ã–µ pre-commit –ø—Ä–æ–≤–µ—Ä–∫–∏ ---
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: "v6.0.0"
    hooks:
      - id: trailing-whitespace
      - id: end-of-file-fixer
      - id: check-yaml
        args: [--allow-multiple-documents]
      - id: check-json
      - id: check-added-large-files
        exclude: ^node_modules/
        args: ["--maxkb=2000"]
      - id: check-merge-conflict
      # üßπ –ó–∞–ø—É—Å–∫ —Ç–æ–ª—å–∫–æ –ø—Ä–∏ commit
        stages: [commit]

  # --- üìù MarkdownLint: —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ ---
  - repo: https://github.com/igorshubovych/markdownlint-cli
    rev: "v0.45.0"
    hooks:
      - id: markdownlint
        name: markdownlint (docs)
        entry: markdownlint
        language: node
        files: |
          ^docs/.*\.md$|
          ^README\.md$|
          ^CONTRIBUTING\.md$
        args: [--config, .markdownlint.yaml, --ignore-path, .markdownlintignore]
        stages: [commit]

  # --- üßæ Yamllint: –≤–∞–ª–∏–¥–∞—Ü–∏—è YAML ---
  - repo: https://github.com/adrienverge/yamllint
    rev: "v1.37.1"
    hooks:
      - id: yamllint
        name: yamllint (project only)
        files: |
          ^\.github/workflows/.*\.ya?ml$|
          ^docker-compose.*\.ya?ml$|
          ^\.yamllint\.yml$
        exclude: |
          ^node_modules/|
          ^venv/|
          ^artifacts/|
          ^logs/
        args:
          - -d
          - "{extends: default, rules: {line-length: disable, truthy: {check-keys: false}}}"
        stages: [commit]

  # --- üîí Detect Secrets: –ø–æ–∏—Å–∫ —Ç–æ–∫–µ–Ω–æ–≤ –∏ –ø–∞—Ä–æ–ª–µ–π ---
  - repo: https://github.com/Yelp/detect-secrets
    rev: "v1.5.0"
    hooks:
      - id: detect-secrets
        args: [--baseline, .secrets.baseline]
        exclude: |
          ^tests/|
          ^artifacts/|
          ^docs/|
          ^node_modules/|
          ^backup/
        stages: [commit]

  # --- üß™ Pytest –ø–µ—Ä–µ–¥ –ø—É—à–µ–º (pre-push) ---
  - repo: local
    hooks:
      - id: run-pytest-before-push
        name: Run pytest before push
        entry: bash -c 'pytest --maxfail=1 --disable-warnings -q || exit 1'
        language: system
        stages: [pre-push]
        pass_filenames: false

  # --- üö´ –û—Ç–∫–ª—é—á—ë–Ω–Ω—ã–π –∞–≤—Ç–æ–∫–æ–º–º–∏—Ç –ø–æ—Å–ª–µ —Ñ–∏–∫—Å–æ–≤ ---
  # –ü—Ä–∏—á–∏–Ω–∞: –≤—ã–∑—ã–≤–∞–ª –±–µ—Å–∫–æ–Ω–µ—á–Ω—ã–π —Ü–∏–∫–ª amend ‚Üí push rollback.
  # –ú–æ–∂–Ω–æ –≤–∫–ª—é—á–∏—Ç—å –≤—Ä—É—á–Ω—É—é –ø–æ–∑–∂–µ –ø—Ä–∏ –ø–æ–ª–Ω–æ–π —Å—Ç–∞–±–∏–ª–∏–∑–∞—Ü–∏–∏.
  # - repo: local
  #   hooks:
  #     - id: auto-commit-after-fix
  #       name: Auto commit after pre-commit fixes
  #       entry: |
  #         bash -c '
  #         if git diff --quiet; then
  #           echo "[auto-commit-after-fix] Nothing to fix, skipping.";
  #         else
  #           echo "[auto-commit-after-fix] Detected fixed files.";
  #           git add -u &&
  #           git commit --amend --no-edit || true;
  #         fi
  #         '
  #       language: system
  #       pass_filenames: false
  #       stages: [manual]
