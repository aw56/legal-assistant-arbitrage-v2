#!/usr/bin/env python3
r"""
üîß –ê–≤—Ç–æ-—Ñ–∏–∫—Å —Ä–µ–≥—É–ª—è—Ä–Ω—ã—Ö –≤—ã—Ä–∞–∂–µ–Ω–∏–π –≤ –ø—Ä–æ–µ–∫—Ç–µ.
–ó–∞–º–µ–Ω—è–µ—Ç —Å—Ç—Ä–æ–∫–∏ –≤–∏–¥–∞ "\\d", "\\(" –∏ —Ç.–¥. –Ω–∞ raw-—Å—Ç—Ä–æ–∫–∏ (r"...").
"""

from pathlib import Path

BASE_DIR = Path(__file__).resolve().parent.parent
EXCLUDE_DIRS = {"venv", ".git", "__pycache__", "migrations"}

# –ü–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã–µ escape-–ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ (–≤ —Å—Ç—Ä–æ–∫–∞—Ö)
ESCAPE_PATTERNS = [
    r"\\d",
    r"\\.",
    r"\\(",
    r"\\)",
    r"\\+",
    r"\\*",
    r"\\s",
    r"\\w",
]


def should_skip(path: Path) -> bool:
    """–ü—Ä–æ–ø—É—Å–∫–∞–µ–º –Ω–µ–Ω—É–∂–Ω—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏."""
    return any(part in EXCLUDE_DIRS for part in path.parts)


def fix_file(path: Path) -> None:
    """–ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç —Å—Ç—Ä–æ–∫–∏ —Å –Ω–µ—ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ regex."""
    text = path.read_text(encoding="utf-8")
    new_lines = []
    changed = False

    for line in text.splitlines():
        if '"' in line or "'" in line:
            for esc in ESCAPE_PATTERNS:
                if esc in line and "r'" not in line and 'r"' not in line:
                    # –¥–æ–±–∞–≤–ª—è–µ–º r –ø–µ—Ä–µ–¥ –∫–∞–≤—ã—á–∫–æ–π
                    line = line.replace(f'"{esc}', f'r"{esc}')
                    line = line.replace(f"'{esc}", f"r'{esc}")
                    changed = True
        new_lines.append(line)

    if changed:
        path.write_text("\n".join(new_lines) + "\n", encoding="utf-8")
        print(f"‚úÖ Fixed regex in {path}")


def main() -> None:
    for path in BASE_DIR.rglob("*.py"):
        if should_skip(path):
            continue
        fix_file(path)
    print("\nüéâ Regex –∞–≤—Ç–æ-—Ñ–∏–∫—Å –∑–∞–≤–µ—Ä—à—ë–Ω!")


if __name__ == "__main__":
    main()
