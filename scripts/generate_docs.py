import sys
from pathlib import Path

from backend.app.main import app

OUTPUT_FILE = Path("docs/API_DOCS.md")


def main():
    try:
        spec = app.openapi()
    except Exception as e:
        sys.stderr.write(f"‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ OpenAPI —Å—Ö–µ–º—ã: {e}\n")
        sys.exit(1)

    md: list[str] = []
    md.append("# üìñ API Docs ‚Äî Legal Assistant Arbitrage v2\n")
    md.append("–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∏–∑ FastAPI OpenAPI —Å—Ö–µ–º—ã\n\n")

    for path, methods in spec.get("paths", {}).items():
        md.append(f"## `{path}`\n")
        for method, details in methods.items():
            summary = details.get("summary", "")
            md.append(f"### {method.upper()}\n")
            md.append(f"- **–û–ø–∏—Å–∞–Ω–∏–µ:** {summary}\n")

            if "parameters" in details:
                md.append("#### –ü–∞—Ä–∞–º–µ—Ç—Ä—ã:\n")
                for p in details["parameters"]:
                    md.append(
                        f"- `{p['name']}` ({p['in']}): {p.get('description', '')}"
                    )

            if "requestBody" in details:
                md.append("#### –¢–µ–ª–æ –∑–∞–ø—Ä–æ—Å–∞:\n")
                md.append("```json\n–ø—Ä–∏–º–µ—Ä –¥–∞–Ω–Ω—ã—Ö...\n```\n")

            if "responses" in details:
                md.append("#### –û—Ç–≤–µ—Ç—ã:\n")
                for code, resp in details["responses"].items():
                    desc = resp.get("description", "")
                    md.append(f"- `{code}`: {desc}")
            md.append("\n")

    OUTPUT_FILE.write_text("\n".join(md), encoding="utf-8")
    print(f"‚úÖ –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –≤ {OUTPUT_FILE}")


if __name__ == "__main__":
    main()
