#!/usr/bin/env python3
"""
‚ö° –ê–≤—Ç–æ-—Ñ–∏–∫—Å Alembic –º–∏–≥—Ä–∞—Ü–∏–π:
1. –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö head-—Ä–µ–≤–∏–∑–∏–π
2. –ï—Å–ª–∏ –∏—Ö –±–æ–ª—å—à–µ –æ–¥–Ω–æ–π ‚Üí –¥–µ–ª–∞–µ—Ç merge
3. –°—Ç–∞–≤–∏—Ç –º–µ—Ç–∫—É head –≤ –ë–î (alembic stamp head)
4. –ß–∏–Ω–∏—Ç –∏–º–ø–æ—Ä—Ç—ã postgresql –∏ –¥–æ–±–∞–≤–ª—è–µ—Ç checkfirst=True –¥–ª—è ENUM
"""

import subprocess
import sys
from pathlib import Path


def run_cmd(cmd):
    try:
        result = subprocess.run(
            cmd, shell=True, text=True, capture_output=True, check=True
        )
        return result.stdout.strip()
    except subprocess.CalledProcessError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏: {cmd}")
        print(e.stderr)
        sys.exit(1)


def fix_postgresql_imports(migrations_dir="migrations/versions"):
    """–î–æ–±–∞–≤–ª—è–µ–º –∏–º–ø–æ—Ä—Ç postgresql –∏ checkfirst=True"""
    path = Path(migrations_dir)
    if not path.exists():
        print("‚ö†Ô∏è –ù–µ—Ç –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ migrations/versions, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –∞–≤—Ç–æ—Ñ–∏–∫—Å")
        return

    for file in path.glob("*.py"):
        text = file.read_text()

        changed = False

        # --- fix –∏–º–ø–æ—Ä—Ç ---
        if (
            "postgresql." in text
            and "from sqlalchemy.dialects import postgresql" not in text
        ):
            lines = text.splitlines()
            for i, line in enumerate(lines):
                if line.startswith("import sqlalchemy as sa"):
                    lines.insert(
                        i + 1, "from sqlalchemy.dialects import postgresql  # auto-fix"
                    )
                    changed = True
                    break
            text = "\n".join(lines)

        # --- fix checkfirst –¥–ª—è ENUM ---
        if (
            "postgresql.ENUM" in text
            and ".create(" in text
            and "checkfirst=True" not in text
        ):
            text = text.replace(".create(", ".create(op.get_bind(), checkfirst=True, ")
            changed = True

        if changed:
            file.write_text(text)
            print(f"‚úÖ Fixed {file.name}")


def main():
    print("üîé –ü—Ä–æ–≤–µ—Ä–∫–∞ heads Alembic...")
    heads = run_cmd("alembic heads")
    lines = [line.split()[0] for line in heads.splitlines() if line.strip()]
    print(f"üìå –ù–∞–π–¥–µ–Ω–æ head-—Ä–µ–≤–∏–∑–∏–π: {lines}")

    if len(lines) > 1:
        merge_cmd = f"alembic merge -m 'merge heads' {' '.join(lines)}"
        print(f"‚ö° –ù–µ—Å–∫–æ–ª—å–∫–æ heads ‚Üí –≤—ã–ø–æ–ª–Ω—è–µ–º merge:\n   {merge_cmd}")
        run_cmd(merge_cmd)
    else:
        print("‚úÖ –¢–æ–ª—å–∫–æ –æ–¥–∏–Ω head, merge –Ω–µ –Ω—É–∂–µ–Ω")

    # --- –∞–≤—Ç–æ—Ñ–∏–∫—Å postgresql ---
    fix_postgresql_imports()

    print("üìå –°—Ç–∞–≤–∏–º stamp head...")
    run_cmd("alembic stamp head")
    print("üéâ Alembic –º–∏–≥—Ä–∞—Ü–∏–∏ –ø—Ä–∏–≤–µ–¥–µ–Ω—ã –≤ –ø–æ—Ä—è–¥–æ–∫!")


if __name__ == "__main__":
    main()
