---
name: Docker Build & Push

"on":
  workflow_run:
    workflows: ["CI"]
    types:
      - completed
  push:
    tags:
      - "v*.*.*"  # автосборка при релизе (например, v1.0.0)
  workflow_dispatch: {}  # ручной запуск из Actions UI

jobs:
  docker:
    runs-on: ubuntu-latest
    if: |
      (github.event_name == 'push' &&
       startsWith(github.ref, 'refs/tags/')) ||
      (github.event_name == 'workflow_run' &&
       github.event.workflow_run.conclusion == 'success') ||
      (github.event_name == 'workflow_dispatch')

    env:
      IMAGE: ${{ secrets.DOCKER_USERNAME }}/legal-assistant-arbitrage-v2

    steps:
      # 1️⃣ Чекаутим репозиторий
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2️⃣ Логинимся в Docker Hub
      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # 3️⃣ Устанавливаем Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # 4️⃣ Определяем теги образов
      - name: Set Docker tags
        id: vars
        shell: bash
        run: |
          echo "sha_tag=${GITHUB_SHA}" >> "$GITHUB_OUTPUT"
          if [["${GITHUB_REF}" == refs/tags/*]]; then
            version_tag="${GITHUB_REF  #refs/tags/}"
            echo "version_tag=${version_tag}" >> "$GITHUB_OUTPUT"
          fi

      # 5️⃣ Собираем и пушим Docker image
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ env.IMAGE }}:latest
            ${{ env.IMAGE }}:${{ steps.vars.outputs.sha_tag }}
            ${{ env.IMAGE }}:${{ steps.vars.outputs.version_tag }}
