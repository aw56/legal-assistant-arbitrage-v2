{
  "info": {
    "name": "Legal Assistant Arbitrage v3 ‚Äî AutoAuth CI Ready",
    "_postman_id": "legal-assistant-ci-autoauth-v3",
    "description": "CI-ready –≤–µ—Ä—Å–∏—è –∫–æ–ª–ª–µ–∫—Ü–∏–∏ Legal Assistant Arbitrage API.\n–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ–∑–¥–∞—ë—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –≤—ã–ø–æ–ª–Ω—è–µ—Ç –ª–æ–≥–∏–Ω, —Ç–µ—Å—Ç–∏—Ä—É–µ—Ç CRUD-–∑–∞–ø—Ä–æ—Å—ã –¥–ª—è –∑–∞–∫–æ–Ω–æ–≤ –∏ —Ä–µ—à–µ–Ω–∏–π, –∞ –∑–∞—Ç–µ–º –≤—ã–ø–æ–ª–Ω—è–µ—Ç —Ñ–∏–Ω–∞–ª—å–Ω—É—é –æ—á–∏—Å—Ç–∫—É –∏ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—é.\n–ü–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫–∞ —á–µ—Ä–µ–∑ `newman` –∏–ª–∏ GitHub Actions.",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "if (!pm.environment.get('base_url')) {",
          "  pm.environment.set('base_url', 'http://82.165.144.150:8080');",
          "}",
          "const rand = Math.floor(Math.random() * 100000);",
          "pm.environment.set('rand_user', `apitester${rand}`);",
          "pm.environment.set('rand_email', `apitester${rand}@example.com`);",
          "pm.environment.set('rand_pass', `apitester${rand}!`);",
          "console.log(`üß† –°–æ–∑–¥–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${pm.environment.get('rand_user')}`);"
        ]
      }
    }
  ],
  "item": [
    {
      "name": "AUTH ‚Äî AutoAuth",
      "item": [
        {
          "name": "Register User",
          "request": {
            "method": "POST",
            "header": [{ "key": "Content-Type", "value": "application/json" }],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"username\": \"{{rand_user}}\",\n  \"email\": \"{{rand_email}}\",\n  \"password\": \"{{rand_pass}}\"\n}"
            },
            "url": "{{base_url}}/api/auth/register"
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 400) {",
                  "  console.log('‚ö†Ô∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç');",
                  "} else {",
                  "  pm.test('–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞ (201/200)', () => pm.expect(pm.response.code).to.be.oneOf([200,201]));",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Login User",
          "request": {
            "method": "POST",
            "header": [{ "key": "Content-Type", "value": "application/json" }],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"username\": \"{{rand_user}}\",\n  \"password\": \"{{rand_pass}}\"\n}"
            },
            "url": "{{base_url}}/api/auth/login"
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞', () => pm.response.to.have.status(200));",
                  "const res = pm.response.json();",
                  "pm.environment.set('token', res.access_token);",
                  "pm.test('–¢–æ–∫–µ–Ω –ø–æ–ª—É—á–µ–Ω', () => pm.expect(res.access_token).to.exist);"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "USER INFO",
      "item": [
        {
          "name": "Get Current User",
          "request": {
            "method": "GET",
            "header": [{ "key": "Authorization", "value": "Bearer {{token}}" }],
            "url": "{{base_url}}/api/auth/me"
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('–î–æ—Å—Ç—É–ø –∫ –ø—Ä–æ—Ñ–∏–ª—é 200', () => pm.response.to.have.status(200));",
                  "const user = pm.response.json();",
                  "pm.environment.set('user_id', user.id);"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "LAWS (CRUD)",
      "item": [
        {
          "name": "Create Law",
          "request": {
            "method": "POST",
            "header": [
              { "key": "Authorization", "value": "Bearer {{token}}" },
              { "key": "Content-Type", "value": "application/json" }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"–ó–∞–∫–æ–Ω –æ–± API-—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏\",\n  \"description\": \"–°–æ–∑–¥–∞–Ω —á–µ—Ä–µ–∑ CI\",\n  \"code\": \"API-CI-{{rand_user}}\",\n  \"article\": \"–¢–µ—Å—Ç–æ–≤–∞—è —Å—Ç–∞—Ç—å—è\",\n  \"date\": \"2025-10-07\"\n}"
            },
            "url": "{{base_url}}/api/laws/"
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('–°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–∫–æ–Ω–∞ 200/201', () => pm.expect(pm.response.code).to.be.oneOf([200,201]));",
                  "const law = pm.response.json();",
                  "pm.environment.set('law_id', law.id);"
                ]
              }
            }
          ]
        },
        {
          "name": "Update Law",
          "request": {
            "method": "PUT",
            "header": [
              { "key": "Authorization", "value": "Bearer {{token}}" },
              { "key": "Content-Type", "value": "application/json" }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"–ó–∞–∫–æ–Ω (–æ–±–Ω–æ–≤–ª—ë–Ω)\",\n  \"description\": \"PUT-–∑–∞–ø—Ä–æ—Å –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è\",\n  \"code\": \"API-CI-{{rand_user}}\",\n  \"article\": \"–û–±–Ω–æ–≤–ª–µ–Ω–æ\",\n  \"date\": \"2025-10-07\"\n}"
            },
            "url": "{{base_url}}/api/laws/{{law_id}}"
          },
          "event": [
            { "listen": "test", "script": { "exec": ["pm.test('–ó–∞–∫–æ–Ω –æ–±–Ω–æ–≤–ª—ë–Ω 200', () => pm.response.to.have.status(200));"] } }
          ]
        }
      ]
    },
    {
      "name": "DECISIONS",
      "item": [
        {
          "name": "Create Decision",
          "request": {
            "method": "POST",
            "header": [
              { "key": "Authorization", "value": "Bearer {{token}}" },
              { "key": "Content-Type", "value": "application/json" }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"–†–µ—à–µ–Ω–∏–µ CI\",\n  \"summary\": \"–°–æ–∑–¥–∞–Ω–æ –≤ CI\",\n  \"law_id\": {{law_id}},\n  \"case_number\": \"CI-{{rand_user}}\",\n  \"court\": \"–ê—Ä–±–∏—Ç—Ä–∞–∂–Ω—ã–π —Å—É–¥ –ú–æ—Å–∫–≤—ã\"\n}"
            },
            "url": "{{base_url}}/api/decisions/"
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('–†–µ—à–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ 200/201', () => pm.expect(pm.response.code).to.be.oneOf([200,201]));",
                  "pm.environment.set('decision_id', pm.response.json().id);"
                ]
              }
            }
          ]
        },
        {
          "name": "Delete Decision",
          "request": {
            "method": "DELETE",
            "header": [{ "key": "Authorization", "value": "Bearer {{token}}" }],
            "url": "{{base_url}}/api/decisions/{{decision_id}}"
          },
          "event": [
            { "listen": "test", "script": { "exec": ["pm.test('–£–¥–∞–ª–µ–Ω–∏–µ —Ä–µ—à–µ–Ω–∏—è 204', () => pm.response.to.have.status(204));"] } }
          ]
        }
      ]
    },
    {
      "name": "CLEANUP",
      "item": [
        {
          "name": "Delete Law",
          "request": {
            "method": "DELETE",
            "header": [{ "key": "Authorization", "value": "Bearer {{token}}" }],
            "url": "{{base_url}}/api/laws/{{law_id}}"
          },
          "event": [
            { "listen": "test", "script": { "exec": ["pm.test('–£–¥–∞–ª–µ–Ω–∏–µ –∑–∞–∫–æ–Ω–∞ 204', () => pm.response.to.have.status(204));"] } }
          ]
        },
        {
          "name": "Verify DB Cleanup",
          "request": {
            "method": "GET",
            "header": [{ "key": "Authorization", "value": "Bearer {{token}}" }],
            "url": "{{base_url}}/api/laws/"
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('–ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—á–∏—Å—Ç–∫–∏ —É—Å–ø–µ—à–Ω–∞', () => pm.response.to.have.status(200));",
                  "console.log('‚úÖ –û—á–∏—Å—Ç–∫–∞ –ë–î –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞');"
                ]
              }
            }
          ]
        }
      ]
    }
  ]
}
