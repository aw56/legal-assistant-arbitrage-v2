import asyncio
from datetime import datetime

from backend.app.core.security import get_password_hash
from backend.app.database import Base, async_session_maker, engine
from backend.app.models.decision import Decision
from backend.app.models.law import Law
from backend.app.models.user import User


async def seed_data():
    async with async_session_maker() as session:
        # –û—á–∏—Å—Ç–∫–∞ —Ç–∞–±–ª–∏—Ü (–¥–ª—è –∏–¥–µ–º–ø–æ—Ç–µ–Ω—Ç–Ω–æ—Å—Ç–∏)
        await session.execute("TRUNCATE TABLE decisions RESTART IDENTITY CASCADE;")
        await session.execute("TRUNCATE TABLE laws RESTART IDENTITY CASCADE;")
        await session.execute("TRUNCATE TABLE users RESTART IDENTITY CASCADE;")

        # ================================
        # üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏
        # ================================
        users = [
            User(
                username="admin",
                email="admin@example.com",
                hashed_password=get_password_hash("admin123"),
                role="admin",
            ),
            User(
                username="manager",
                email="manager@example.com",
                hashed_password=get_password_hash("manager123"),
                role="manager",
            ),
            User(
                username="client",
                email="client@example.com",
                hashed_password=get_password_hash("client123"),
                role="client",
            ),
        ]
        session.add_all(users)

        # ================================
        # üìú –ó–∞–∫–æ–Ω—ã
        # ================================
        laws = [
            Law(
                title="–ì—Ä–∞–∂–¥–∞–Ω—Å–∫–∏–π –∫–æ–¥–µ–∫—Å –†–§",
                content="–û—Å–Ω–æ–≤–Ω–æ–π –¥–æ–∫—É–º–µ–Ω—Ç –≥—Ä–∞–∂–¥–∞–Ω—Å–∫–æ–≥–æ –ø—Ä–∞–≤–∞ –†–§",
            ),
            Law(
                title="–ê—Ä–±–∏—Ç—Ä–∞–∂–Ω—ã–π –ø—Ä–æ—Ü–µ—Å—Å—É–∞–ª—å–Ω—ã–π –∫–æ–¥–µ–∫—Å –†–§",
                content="–†–µ–≥–ª–∞–º–µ–Ω—Ç –∞—Ä–±–∏—Ç—Ä–∞–∂–Ω–æ–≥–æ —Å—É–¥–æ–ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞",
            ),
            Law(
                title='–§–µ–¥–µ—Ä–∞–ª—å–Ω—ã–π –∑–∞–∫–æ–Ω "–û–± –∞–¥–≤–æ–∫–∞—Ç—Å–∫–æ–π –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏"',
                content="–ó–∞–∫–æ–Ω —Ä–µ–≥—É–ª–∏—Ä—É–µ—Ç –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∞–¥–≤–æ–∫–∞—Ç–æ–≤ –≤ –†–§",
            ),
        ]
        session.add_all(laws)

        # ================================
        # ‚öñÔ∏è –°—É–¥–µ–±–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è
        # ================================
        decisions = [
            Decision(
                title="–î–µ–ª–æ ‚Ññ–ê40-12345/2025",
                content="–†–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–µ —Å–ø–æ—Ä–∞ –ø–æ –¥–æ–≥–æ–≤–æ—Ä—É –ø–æ—Å—Ç–∞–≤–∫–∏.",
            ),
            Decision(
                title="–î–µ–ª–æ ‚Ññ–ê40-54321/2025",
                content="–ê—Ä–±–∏—Ç—Ä–∞–∂–Ω—ã–π —Å–ø–æ—Ä –ø–æ –∞—Ä–µ–Ω–¥–µ –Ω–µ–∂–∏–ª–æ–≥–æ –ø–æ–º–µ—â–µ–Ω–∏—è.",
            ),
            Decision(
                title="–î–µ–ª–æ ‚Ññ–ê40-67890/2025",
                content="–ò—Å–∫ –æ –≤–∑—ã—Å–∫–∞–Ω–∏–∏ –∑–∞–¥–æ–ª–∂–µ–Ω–Ω–æ—Å—Ç–∏ –ø–æ –∫–æ–Ω—Ç—Ä–∞–∫—Ç—É.",
            ),
        ]
        session.add_all(decisions)

        await session.commit()
        print("üå± –°–∏–¥—ã –ø—Ä–∏–º–µ–Ω–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")


if __name__ == "__main__":
    asyncio.run(seed_data())
