from typing import Literal, Optional

from pydantic import BaseModel, ConfigDict, constr


# üîπ –ë–∞–∑–æ–≤–∞—è —Å—Ö–µ–º–∞ (–¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è)
class UserBase(BaseModel):
    username: str
    role: Literal["admin", "lawyer", "client"] = "client"


# üîπ –î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
class UserCreate(UserBase):
    password: constr(min_length=6, max_length=100)


# üîπ –î–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (—á–∞—Å—Ç–∏—á–Ω–æ–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ)
class UserUpdate(BaseModel):
    username: Optional[str] = None
    password: Optional[constr(min_length=6, max_length=100)] = None
    role: Optional[Literal["admin", "lawyer", "client"]] = None


# üîπ –î–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
class User(UserBase):
    id: int

    model_config = ConfigDict(from_attributes=True)
