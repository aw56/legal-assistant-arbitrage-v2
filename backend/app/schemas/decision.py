from typing import Optional

from pydantic import BaseModel, ConfigDict


# üîπ –ë–∞–∑–æ–≤–∞—è —Å—Ö–µ–º–∞
class DecisionBase(BaseModel):
    case_number: str
    court: str
    summary: Optional[str] = None


# üîπ –°–æ–∑–¥–∞–Ω–∏–µ
class DecisionCreate(DecisionBase):
    pass


# üîπ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ (—á–∞—Å—Ç–∏—á–Ω–æ–µ)
class DecisionUpdate(BaseModel):
    case_number: Optional[str] = None
    court: Optional[str] = None
    summary: Optional[str] = None


# üîπ –í–æ–∑–≤—Ä–∞—Ç
class Decision(DecisionBase):
    id: int

    model_config = ConfigDict(from_attributes=True)
