# ============================================
# üìò Legal Assistant Arbitrage v2 ‚Äî Makefile
# ============================================

# Python virtualenv
VENV = . venv/bin/activate &&

# ============================================
# üîπ –û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
# ============================================

# –ó–∞–ø—É—Å–∫ API (–ª–æ–∫–∞–ª—å–Ω–æ, –≤ foreground)
run:
	$(VENV) uvicorn backend.app.main:app --host 0.0.0.0 --port 8000 --reload

# –ó–∞–ø—É—Å–∫ API –≤ —Ñ–æ–Ω–µ
run-bg:
	$(VENV) nohup uvicorn backend.app.main:app --host 0.0.0.0 --port 8000 --reload > server.log 2>&1 &
	@echo "üöÄ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –≤ —Ñ–æ–Ω–µ. –õ–æ–≥–∏: tail -f server.log"

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ñ–æ–Ω–æ–≤–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞
stop-bg:
	pkill -f "uvicorn backend.app.main:app" || true
	@echo "üõë –°–µ—Ä–≤–µ—Ä –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"

# –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤
logs:
	tail -f server.log

# ============================================
# üîπ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∏ –º–∏–≥—Ä–∞—Ü–∏–∏
# ============================================

# –ó–∞–ø—É—Å–∫ alembic –º–∏–≥—Ä–∞—Ü–∏–π
alembic:
	$(VENV) alembic upgrade head

# –û—á–∏—Å—Ç–∫–∞ –ª–æ–∫–∞–ª—å–Ω–æ–π SQLite
clean-db:
	rm -f test.db
	@echo "üóëÔ∏è test.db —É–¥–∞–ª—ë–Ω"

# ============================================
# üîπ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
# ============================================

# –ó–∞–ø—É—Å–∫ pytest —Å SQLite
test:
	$(VENV) TEST_SQLITE=1 pytest -v

# –ü–æ–ª–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞: —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ + —Ç–µ—Å—Ç—ã + –ª–∏–Ω—Ç–µ—Ä—ã
check: format lint test

# ============================================
# üîπ –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è
# ============================================

# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è OpenAPI JSON
docs:
	$(VENV) python scripts/generate_openapi_json.py

# ============================================
# üîπ Docker
# ============================================

# –ó–∞–ø—É—Å–∫ –≤ dev-—Ä–µ–∂–∏–º–µ
docker:
	docker compose up --build

# –ó–∞–ø—É—Å–∫ –≤ –ø—Ä–æ–¥-—Ä–µ–∂–∏–º–µ
docker-prod:
	docker compose -f docker-compose.prod.yml up -d --build

# –ü–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤ –∏ volume
docker-reset:
	docker compose -f docker-compose.prod.yml down -v
	@echo "üîÑ Docker volume –∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã —É–¥–∞–ª–µ–Ω—ã"

# ============================================
# üîπ –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –æ–∫—Ä—É–∂–µ–Ω–∏–π
# ============================================

# –õ–æ–∫–∞–ª—å–Ω–∞—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞ (SQLite)
env-local:
	cp .env.example .env && echo "USE_SQLITE=1" >> .env
	@echo "‚úÖ –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–æ –Ω–∞ –ª–æ–∫–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ (SQLite)"

# –ü—Ä–æ–¥–∞–∫—à–µ–Ω (PostgreSQL)
env-prod:
	cp .env.example .env && sed -i '/USE_SQLITE/d' .env
	@echo "‚úÖ –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–æ –Ω–∞ –ø—Ä–æ–¥ –æ–∫—Ä—É–∂–µ–Ω–∏–µ (PostgreSQL)"

# ============================================
# üîπ –ö–æ–¥—Å—Ç–∞–π–ª –∏ –ª–∏–Ω—Ç–µ—Ä—ã
# ============================================

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ dev-–∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
dev-install:
	$(VENV) pip install black isort flake8 pre-commit

# –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–¥–∞
format:
	$(VENV) black backend scripts
	$(VENV) isort backend scripts

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∏–ª—è
lint:
	$(VENV) black --check backend scripts
	$(VENV) isort --check-only backend scripts
	$(VENV) flake8 backend scripts

# ============================================
# üîπ Pre-commit hooks
# ============================================

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ pre-commit –≤ –ø—Ä–æ–µ–∫—Ç
pre-commit-install:
	$(VENV) pre-commit install
	@echo "‚úÖ pre-commit —Ö—É–∫–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"

# –†—É—á–Ω–æ–π –∑–∞–ø—É—Å–∫ pre-commit –¥–ª—è –≤—Å–µ—Ö —Ñ–∞–π–ª–æ–≤
pre-commit-run:
	$(VENV) pre-commit run --all-files

# ============================================
# üîπ –£—Ç–∏–ª–∏—Ç—ã
# ============================================

# –û—á–∏—Å—Ç–∫–∞ pycache
clean-pycache:
	find . -type d -name "__pycache__" -exec rm -rf {} +

# –ü–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è (–∫—ç—à + SQLite)
reset: clean-pycache clean-db
	@echo "üîÑ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞"

cleanup:
	. venv/bin/activate && bash scripts/cleanup_imports.sh

# –§–∏–∫—Å–∏—Ä–æ–≤–∞—Ç—å –∏ –ø—É—à–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ GitHub.
save:
	@git add .
	@git commit -m "chore: save current state"
	@git push -u origin main
	@echo "‚úÖ –ò–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –≤ GitHub"
