# ================================
# üì¶ Legal Assistant Arbitrage v2
# Makefile –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–æ–º
# ================================

# --- Default goal ---
.DEFAULT_GOAL := help

# --- Docker ---
up: ## üöÄ –ó–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤ (prod)
	docker compose -f docker-compose.prod.yml up -d --build

down: ## ‚èπÔ∏è –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
	docker compose -f docker-compose.prod.yml down

rebuild: ## üîÑ –ü–æ–ª–Ω—ã–π –ø–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤ —Å volume
	docker compose -f docker-compose.prod.yml down --volumes --remove-orphans
	docker compose -f docker-compose.prod.yml up -d --build --force-recreate

logs: ## üìú –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
	docker compose -f docker-compose.prod.yml logs -f

ps: ## üìã –°–ø–∏—Å–æ–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
	docker compose -f docker-compose.prod.yml ps

shell: ## üêö –ó–∞–π—Ç–∏ –≤–Ω—É—Ç—Ä—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ backend
	docker compose -f docker-compose.prod.yml exec backend bash

# --- Alembic / DB ---
migrate: ## üóÑÔ∏è –ü—Ä–∏–º–µ–Ω–∏—Ç—å –º–∏–≥—Ä–∞—Ü–∏–∏
	docker compose -f docker-compose.prod.yml exec backend alembic upgrade head

makemigrations: ## ‚úçÔ∏è –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é –º–∏–≥—Ä–∞—Ü–∏—é
	docker compose -f docker-compose.prod.yml exec backend alembic revision --autogenerate -m "new migration"

# --- Healthcheck ---
health-host: ## ‚ù§Ô∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ API —Å —Ö–æ—Å—Ç–∞
	curl -s http://127.0.0.1:8080/api/health | jq

health-container: ## ‚ù§Ô∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ API –∏–∑ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
	docker compose -f docker-compose.prod.yml exec backend curl -s http://127.0.0.1:8000/api/health | jq

# --- Git ---
git-add: ## ‚ûï –î–æ–±–∞–≤–∏—Ç—å –≤—Å–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è
	git add .

git-fix: ## üßπ –ó–∞–ø—É—Å—Ç–∏—Ç—å pre-commit hooks (black, isort, flake8 –∏ —Ç.–¥.)
	pre-commit run --all-files || true

git-commit: ## üíæ –°–¥–µ–ª–∞—Ç—å commit (–ø—Ä–∏–º–µ—Ä: make git-commit m="fix: –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∞ –æ—à–∏–±–∫–∞")
	@if [ -z "$(m)" ]; then \
		echo "‚ùå –£–∫–∞–∂–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –∫–æ–º–º–∏—Ç–∞: make git-commit m=\"—Ç–µ–∫—Å—Ç\""; \
		exit 1; \
	fi
	git commit -m "$(m)" --allow-empty || true

git-push: ## ‚¨ÜÔ∏è –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ origin/main
	git push origin main

git-all: git-add git-fix ## üöÄ –ü–æ–ª–Ω—ã–π —Ü–∏–∫–ª: add + commit + push (–ø—Ä–∏–º–µ—Ä: make git-all m="feat: –Ω–æ–≤–∞—è —Ñ—É–Ω–∫—Ü–∏—è")
	@if [ -z "$(m)" ]; then \
		echo "‚ùå –£–∫–∞–∂–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –∫–æ–º–º–∏—Ç–∞: make git-all m=\"—Ç–µ–∫—Å—Ç\""; \
		exit 1; \
	fi
	git commit -m "$(m)" --allow-empty || true
	git push origin main

git-amend: ## ‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–π commit –∏ –ø–µ—Ä–µ–ø–∏—Å–∞—Ç—å –∏—Å—Ç–æ—Ä–∏—é
	git add .
	pre-commit run --all-files || true
	git commit --amend --no-edit || true
	git push origin main --force

git-sync: ## üîÑ –ü–æ–¥—Ç—è–Ω—É—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è –∏–∑ origin/main —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º –ª–æ–∫–∞–ª—å–Ω—ã—Ö
	@git stash push -m "sync-stash" || true
	@git fetch origin main
	@git rebase origin/main || true
	@git stash pop || true

git-reset-hard: ## üí• –°–±—Ä–æ—Å –∫ origin/main (–±–µ–∑ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π)
	@git fetch origin main
	@git reset --hard origin/main
	@echo "‚úÖ –õ–æ–∫–∞–ª—å–Ω–∞—è –≤–µ—Ç–∫–∞ –ø–æ–ª–Ω–æ—Å—Ç—å—é —Å–±—Ä–æ—à–µ–Ω–∞ –∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω–∞ —Å origin/main"

git-reset-soft: ## üìù –°–±—Ä–æ—Å –∫ origin/main (—Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ —Ä–∞–±–æ—á–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏)
	@git fetch origin main
	@git reset --soft origin/main
	@echo "‚úÖ –°–±—Ä–æ—Å –∫ origin/main, –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ —Ä–∞–±–æ—á–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏"

# --- Help ---
help: ## üìñ –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥
	@echo "=== üõ† –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã Makefile ==="
	@grep -E '^[a-zA-Z_-]+:.*?## .*$$' $(MAKEFILE_LIST) \
		| awk 'BEGIN {FS = ":.*?## "}; {printf "  \033[36m%-18s\033[0m %s\n", $$1, $$2}'
